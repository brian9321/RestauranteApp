import { __awaiter, __decorate, __extends, __generator } from "tslib";
import { NgModule, InjectionToken } from '@angular/core';
import { Storage } from '@ionic/storage';
import { isPlatformServer } from '@angular/common';
import * as ɵngcc0 from '@angular/core';
var StorageConfigToken = new InjectionToken('STORAGE_CONFIG_TOKEN');
export { StorageConfigToken, Storage };
var NoopStorage = /** @class */ (function (_super) {
    __extends(NoopStorage, _super);
    function NoopStorage() {
        return _super.call(this) || this;
    }
    NoopStorage.prototype.create = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this];
            });
        });
    };
    NoopStorage.prototype.defineDriver = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/];
            });
        });
    };
    Object.defineProperty(NoopStorage.prototype, "driver", {
        get: function () {
            return 'noop';
        },
        enumerable: true,
        configurable: true
    });
    NoopStorage.prototype.get = function (key) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/, null];
        }); });
    };
    NoopStorage.prototype.set = function (key, value) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    NoopStorage.prototype.remove = function (key) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    NoopStorage.prototype.clear = function () {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    NoopStorage.prototype.length = function () {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/, 0];
        }); });
    };
    NoopStorage.prototype.keys = function () {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/, []];
        }); });
    };
    NoopStorage.prototype.forEach = function (iteratorCallback) {
        return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {
            return [2 /*return*/];
        }); });
    };
    NoopStorage.prototype.setEncryptionKey = function (key) { };
    return NoopStorage;
}(Storage));
export function provideStorage(storageConfig) {
    if (isPlatformServer(this.platformId)) {
        // When running in a server context return the NoopStorage
        return new NoopStorage();
    }
    return new Storage(storageConfig);
}
var IonicStorageModule = /** @class */ (function () {
    function IonicStorageModule() {
    }
    IonicStorageModule_1 = IonicStorageModule;
    IonicStorageModule.forRoot = function (storageConfig) {
        if (storageConfig === void 0) { storageConfig = null; }
        return {
            ngModule: IonicStorageModule_1,
            providers: [
                { provide: StorageConfigToken, useValue: storageConfig },
                {
                    provide: Storage,
                    useFactory: provideStorage,
                    deps: [StorageConfigToken]
                }
            ]
        };
    };
    var IonicStorageModule_1;
IonicStorageModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: IonicStorageModule });
IonicStorageModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function IonicStorageModule_Factory(t) { return new (t || IonicStorageModule)(); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IonicStorageModule, [{
        type: NgModule
    }], function () { return []; }, null); })();
    return IonicStorageModule;
}());
export { IonicStorageModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIm5nOi9AaW9uaWMvc3RvcmFnZS1hbmd1bGFyL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFvQyxjQUFjLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0YsT0FBTyxFQUNMLE9BQU8sRUFFUixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztBQUVuRCxJQUFNLGtCQUFrQixHQUFHLElBQUksY0FBYyxDQUMzQyxzQkFBc0IsQ0FDdkIsQ0FBQztBQUVGLE9BQU8sRUFBaUIsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLENBQUM7QUFFdEQ7QUFDaUIsSUFEUywrQkFBTztBQUFDLElBQ2hDO0FBQ08sZUFBTCxpQkFBTztBQUVQLElBREYsQ0FBQztBQUNILElBQVEsNEJBQU0sR0FBWjtBQUFjO0FBS1I7QUFHRixnQkFQRixzQkFBTyxJQUFJLEVBQUM7QUFDaEI7QUFDWTtBQUFZLEtBRHJCO0FBQ0YsSUFBTyxrQ0FBWSxHQUFsQjtBQUFjO0FBR0E7QUFHWjtBQUNGO0FBQWdCO0FBQVksS0FOM0I7QUFDRixJQUFDLHNCQUFJLCtCQUFNO0FBQUksYUFBZDtBQUFjLFlBQ1osT0FBTyxNQUFNLENBQUM7QUFDbEIsUUFBRSxDQUFDO0FBQ0Y7QUFBMEI7QUFDZixPQUZUO0FBQ0gsSUFBUSx5QkFBRyxHQUFULFVBQVUsR0FBVztBQUFJO0FBRzNCLFlBSDJCLHNCQUFPLElBQUksRUFBQztBQUFDO0FBQzFCLEtBRDJCO0FBQ3hDLElBQU8seUJBQUcsR0FBVCxVQUFVLEdBQVcsRUFBRSxLQUFVO0FBQUk7QUFHcEI7QUFDYjtBQUFnQixLQUprQjtBQUN2QyxJQUFPLDRCQUFNLEdBQVosVUFBYSxHQUFXO0FBQUk7QUFHM0I7QUFDTTtBQUFnQixLQUpvQjtBQUM1QyxJQUFPLDJCQUFLLEdBQVg7QUFBYztBQUdWO0FBQW1DO0FBQWdCLEtBSHZCO0FBQ2pDLElBQU8sNEJBQU0sR0FBWjtBQUFjO0FBRXlCLFlBRkwsc0JBQU8sQ0FBQyxFQUFDO0FBQUM7QUFDaEMsS0FEaUM7QUFDOUMsSUFBTywwQkFBSSxHQUFWO0FBQWM7QUFDeUUsWUFEeEUsc0JBQU8sRUFBRSxFQUFBO0FBQUM7QUFDYixLQURjO0FBQzNCLElBQU8sNkJBQU8sR0FBYixVQUFjLGdCQUEyRTtBQUFJO0FBS2pGO0FBRVQ7QUFBZ0IsS0FQMEY7QUFDOUcsSUFBQyxzQ0FBZ0IsR0FBaEIsVUFBaUIsR0FBVyxJQUFJLENBQUM7QUFDbEMsSUFBRCxrQkFBQztBQUFELENBQUMsQUFwQkQsQ0FBMEIsT0FBTyxHQW9CaEM7QUFFRCxNQUFNLFVBQVUsY0FBYyxDQUM1QixhQUE0QjtBQUMzQixJQUNELElBQUksZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQ3pDLFFBQUksMERBQTBEO0FBQzlELFFBQUksT0FBTyxJQUFJLFdBQVcsRUFBRSxDQUFDO0FBQzdCLEtBQUc7QUFDSCxJQUNFLE9BQU8sSUFBSSxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDcEMsQ0FBQztBQUdEO0FBQ29CLElBRHBCO0FBQWdDLElBY2hDLENBQUM7QUFDRCwyQkFmYSxrQkFBa0I7QUFBRSxJQUN4QiwwQkFBTyxHQUFkLFVBQWUsYUFBbUM7QUFBSSxRQUF2Qyw4QkFBQSxFQUFBLG9CQUFtQztBQUFJLFFBQ3BELE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSxvQkFBa0I7QUFDbEMsWUFBTSxTQUFTLEVBQUU7QUFDakIsZ0JBQVEsRUFBRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRTtBQUNoRSxnQkFBUTtBQUNSLG9CQUFVLE9BQU8sRUFBRSxPQUFPO0FBQzFCLG9CQUFVLFVBQVUsRUFBRSxjQUFjO0FBQ3BDLG9CQUFVLElBQUksRUFBRSxDQUFDLGtCQUFrQixDQUFDO0FBQ3BDLGlCQUFTO0FBQ1QsYUFBTztBQUNQLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNGO0lBZFksa0JBQWtCLCtDQUQ5QixRQUFRLEVBQUU7TUFDRSxrQkFBa0IsQ0FjOUI7OztnREFDRDtBQUFDLElBREQseUJBQUM7QUFDQSxDQURBLEFBZEQsSUFjQztBQUNELFNBZmEsa0JBQWtCO0FBQzlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIFBMQVRGT1JNX0lELCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge1xuICBTdG9yYWdlLFxuICBTdG9yYWdlQ29uZmlnXG59IGZyb20gJ0Bpb25pYy9zdG9yYWdlJztcbmltcG9ydCB7IGlzUGxhdGZvcm1TZXJ2ZXIgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5jb25zdCBTdG9yYWdlQ29uZmlnVG9rZW4gPSBuZXcgSW5qZWN0aW9uVG9rZW48YW55PihcbiAgJ1NUT1JBR0VfQ09ORklHX1RPS0VOJ1xuKTtcblxuZXhwb3J0IHsgU3RvcmFnZUNvbmZpZywgU3RvcmFnZUNvbmZpZ1Rva2VuLCBTdG9yYWdlIH07XG5cbmNsYXNzIE5vb3BTdG9yYWdlIGV4dGVuZHMgU3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cbiAgYXN5bmMgY3JlYXRlKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIGFzeW5jIGRlZmluZURyaXZlcigpIHtcbiAgfVxuICBnZXQgZHJpdmVyKCk6IHN0cmluZyB8IG51bGwge1xuICAgIHJldHVybiAnbm9vcCc7XG4gIH1cbiAgYXN5bmMgZ2V0KGtleTogc3RyaW5nKSB7IHJldHVybiBudWxsOyB9XG4gIGFzeW5jIHNldChrZXk6IHN0cmluZywgdmFsdWU6IGFueSkgeyB9XG4gIGFzeW5jIHJlbW92ZShrZXk6IHN0cmluZyk6IFByb21pc2U8YW55PiB7IH1cbiAgYXN5bmMgY2xlYXIoKTogUHJvbWlzZTx2b2lkPiB7IH1cbiAgYXN5bmMgbGVuZ3RoKCk6IFByb21pc2U8bnVtYmVyPiB7IHJldHVybiAwOyB9XG4gIGFzeW5jIGtleXMoKSB7IHJldHVybiBbXSB9XG4gIGFzeW5jIGZvckVhY2goaXRlcmF0b3JDYWxsYmFjazogKHZhbHVlOiBhbnksIGtleTogc3RyaW5nLCBpdGVyYXRpb25OdW1iZXI6IE51bWJlcikgPT4gYW55KTogUHJvbWlzZTx2b2lkPiB7IH1cbiAgc2V0RW5jcnlwdGlvbktleShrZXk6IHN0cmluZykgeyB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlU3RvcmFnZShcbiAgc3RvcmFnZUNvbmZpZzogU3RvcmFnZUNvbmZpZ1xuKTogU3RvcmFnZSB7XG4gIGlmIChpc1BsYXRmb3JtU2VydmVyKHRoaXMucGxhdGZvcm1JZCkpIHtcbiAgICAvLyBXaGVuIHJ1bm5pbmcgaW4gYSBzZXJ2ZXIgY29udGV4dCByZXR1cm4gdGhlIE5vb3BTdG9yYWdlXG4gICAgcmV0dXJuIG5ldyBOb29wU3RvcmFnZSgpO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBTdG9yYWdlKHN0b3JhZ2VDb25maWcpO1xufVxuXG5ATmdNb2R1bGUoKVxuZXhwb3J0IGNsYXNzIElvbmljU3RvcmFnZU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KHN0b3JhZ2VDb25maWc6IFN0b3JhZ2VDb25maWcgPSBudWxsKTogTW9kdWxlV2l0aFByb3ZpZGVyczxJb25pY1N0b3JhZ2VNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IElvbmljU3RvcmFnZU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7IHByb3ZpZGU6IFN0b3JhZ2VDb25maWdUb2tlbiwgdXNlVmFsdWU6IHN0b3JhZ2VDb25maWcgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFN0b3JhZ2UsXG4gICAgICAgICAgdXNlRmFjdG9yeTogcHJvdmlkZVN0b3JhZ2UsXG4gICAgICAgICAgZGVwczogW1N0b3JhZ2VDb25maWdUb2tlbl1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==